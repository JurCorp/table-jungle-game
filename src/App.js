import React, { useState } from "react";

const App = () => {
  const [step, setStep] = useState("rewind"); // rew, wake, break, resume, vacancy, letter, intro, name, quiz, end
  const [username, setUsername] = useState("");
  const [mood, setMood] = useState("good");
  const [questionIndex, setQuestionIndex] = useState(0);
  const [score, setScore] = useState(0);
  const [selected, setSelected] = useState(null);
  const [ariResponse, setAriResponse] = useState("");

  const questions = [
    {
    question: "–ö–∞–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —É —Ñ—É–Ω–∫—Ü–∏–∏ –°–£–ú–ú –≤ Excel?",
    options: [
      "=SUMM(A1:A5)",
      "=–°–£–ú–ú(A1:A5)",
      "=TOTAL(A1:A5)",
      "=–°–£–ú–ê(A1:A5)"
    ],
    correct: "=–°–£–ú–ú(A1:A5)",
    topic: "–§–æ—Ä–º—É–ª—ã"
  },
  {
    question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –°–†–ó–ù–ê–ß?",
    options: [
      "–°—á–∏—Ç–∞–µ—Ç —Å—É–º–º—É –∑–Ω–∞—á–µ–Ω–∏–π",
      "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
      "–°—á–∏—Ç–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ",
      "–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —è—á–µ–π–∫–∏"
    ],
    correct: "–°—á–∏—Ç–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ",
    topic: "–§–æ—Ä–º—É–ª—ã"
  },
  {
    question: "–ö–∞–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ –≤–µ—Ä–Ω—ë—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ?",
    options: [
      "=MIN(A1:A5)",
      "=–°–†–ó–ù–ê–ß(A1:A5)",
      "=MAX(A1:A5)",
      "=IF(A1>A2,A1,A2)"
    ],
    correct: "=MAX(A1:A5)",
    topic: "–§–æ—Ä–º—É–ª—ã"
  },
  {
    question: "–ö–∞–∫ –∑–∞–¥–∞—Ç—å —á–∏—Å–ª–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç —Å –¥–≤—É–º—è –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π?",
    options: [
      "–§–æ—Ä–º–∞—Ç —è—á–µ–µ–∫ > –ß–∏—Å–ª–æ–≤–æ–π > –î–≤–∞ –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π",
      "–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É –û–ö–†–£–ì–õ",
      "–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ—á–∫—É –≤—Ä—É—á–Ω—É—é",
      "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å"
    ],
    correct: "–§–æ—Ä–º–∞—Ç —è—á–µ–µ–∫ > –ß–∏—Å–ª–æ–≤–æ–π > –î–≤–∞ –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π",
    topic: "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
  },
  {
    question: "–ß—Ç–æ –≤—ã–±—Ä–∞—Ç—å –≤–º–µ—Å—Ç–æ –í–ü–† –≤ Excel 365?",
    options: [
      "=XLOOKUP(...) / =–ü–†–û–°–ú–û–¢–†–•(...)",
      "=–ò–Ω–¥–µ–∫—Å + –ü–æ–∏—Å–∫",
      "=–ì–ü–†",
      "=–§–ò–õ–¨–¢–†"
    ],
    correct: "=XLOOKUP(...) / =–ü–†–û–°–ú–û–¢–†–•(...)",
    topic: "–ü–æ–∏—Å–∫"
  },
  ];

  const ariPhrases = {
    good: {
      correct: [
        "–û—Ç–ª–∏—á–Ω–æ! –Ø –≤–∏–∂—É, —Ç—ã –Ω–µ –∑—Ä—è –æ–∫–æ–Ω—á–∏–ª –Æ—Ä—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç.",
        "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –£ –Ω–∞—Å –ª—é–±—è—Ç –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥—É–º–∞—é—Ç.",
        "–í–ø–µ—á–∞—Ç–ª—è—é—â–µ",
      ],
      incorrect: [
        "–û—à–∏–±—Å—è, –±—ã–≤–∞–µ—Ç. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –¥–µ–ª–∞—Ç—å –≤—ã–≤–æ–¥—ã!",
        "–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ. –ú—ã —É—á–∏–º—Å—è –Ω–∞ –æ—à–∏–±–∫–∞—Ö.",
        "–Ø —Ç–æ–∂–µ –Ω–µ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞ –ø–æ–Ω—è–ª Excel.",
      ],
    },
    bad: {
      correct: [
        "–ù—É –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ —á—Ç–æ-—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ.",
        "–¢—ã —ç—Ç–æ —Å–∞–º —Å–¥–µ–ª–∞–ª, –∏–ª–∏ –∫—Ç–æ-—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∞–ª?",
        "–°–ª—É—á–∞–π–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–∂–∞–ª?",
      ],
      incorrect: [
        "–í–æ—Ç —Ç–∞–∫ –∏ –∑–Ω–∞–ª, —á—Ç–æ —Ç—ã –Ω–µ —Ç—è–Ω–µ—à—å.",
        "–≠—Ç–æ –¥–∞–∂–µ –Ω–µ —Å–º–µ—à–Ω–æ.",
        "–ö–∞–∫ —Ç—ã –≤–æ–æ–±—â–µ —Å—é–¥–∞ –ø–æ–ø–∞–ª?",
      ],
    },
  };

  const getAriResponse = (isCorrect) => {
    const phrases = ariPhrases[mood][isCorrect ? "correct" : "incorrect"];
    return phrases[Math.floor(Math.random() * phrases.length)];
  };

  const handleAnswer = (option) => {
    if (selected) return;
    setSelected(option);
    const current = questions[questionIndex];
    const isCorrect = option === current.correct;
    if (isCorrect) setScore((prev) => prev + 1);
    setAriResponse(getAriResponse(isCorrect));
    if (!isCorrect && Math.random() < 0.4) setMood("bad");
    setTimeout(() => {
      setSelected(null);
      setAriResponse("");
      if (questionIndex + 1 >= questions.length) {
        setStep("end");
      } else {
        setQuestionIndex((prev) => prev + 1);
      }
    }, 2500);
  };

  // 0. –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ: –ø–µ—Ä–µ–º–æ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
  if (step === "rewind") {
    return (
      <div className="p-6 text-center">
        <h1 className="text-2xl font-bold mb-4">–ö–æ–≥–¥–∞ –≤—Å—ë –Ω–∞—á–∞–ª–æ—Å—å‚Ä¶</h1>
        <img src="https://placehold.co/600x300?text=Rewind+Animation" alt="rewind" className="mx-auto mb-4" />
        <button className="bg-black text-white p-2 rounded" onClick={() => setStep("wake")}>
          –ü—Ä–æ—Å–Ω—É—Ç—å—Å—è
        </button>
      </div>
    );
  }

  // 1. –ö–∏—Ä–∏–ª–ª –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è
  if (step === "wake") {
    return (
      <div className="p-6 text-center">
        <h2 className="text-xl font-bold mb-4">–ë—É–¥–∏–ª—å–Ω–∏–∫ –æ—Ä—ë—Ç. –ö–∏—Ä–∏–ª–ª –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≥–ª–∞–∑–∞...</h2>
        <img src="/room.jpg" alt="wake" className="mx-auto mb-4" />
        <button className="bg-yellow-300 hover:bg-yellow-400 p-2 rounded" onClick={() => setStep("breakfast")}>
          –í—Å—Ç–∞—Ç—å –∏ –ø–æ–π—Ç–∏ –Ω–∞ –∫—É—Ö–Ω—é
        </button>
      </div>
    );
  }

  // 2. –ó–∞–≤—Ç—Ä–∞–∫
  if (step === "breakfast") {
    return (
      <div className="p-6 text-center">
        <h2 className="text-xl mb-2">–ù–∞ –∫—É—Ö–Ω–µ ‚Äî –∫–∞—à–∞ –∏–∑ –ø–∞–ø–æ—Ä–æ—Ç–Ω–∏–∫–æ–≤. –ö–∏—Ä–∏–ª–ª –∑–∞–≤—Ç—Ä–∞–∫–∞–µ—Ç –≤ —Ç–∏—à–∏–Ω–µ.</h2>
        <img src="https://placehold.co/600x300?text=–ó–∞–≤—Ç—Ä–∞–∫+–¥–∏–Ω–æ–∑–∞–≤—Ä–∞" alt="breakfast" className="mx-auto mb-4" />
        <button className="bg-yellow-300 hover:bg-yellow-400 p-2 rounded" onClick={() => setStep("resume")}>
          –ü–æ—Ä–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ
        </button>
      </div>
    );
  }

  // 3. –†–µ–∑—é–º–µ (–≤–≤–æ–¥ –∏–º–µ–Ω–∏)
  if (step === "resume") {
    return (
      <div className="p-6 text-center">
        <h2 className="text-xl mb-4">–ö–∏—Ä–∏–ª–ª –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç Excel –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å —Ä–µ–∑—é–º–µ:</h2>
        <input
          type="text"
          className="border p-2 mb-2 w-full max-w-sm"
          placeholder="–ò–º—è"
          onChange={(e) => setUsername(e.target.value)}
        /><br />
        <input
          type="text"
          className="border p-2 mb-2 w-full max-w-sm"
          placeholder="–ü–æ–ª"
        /><br />
        <input
          type="text"
          className="border p-2 mb-2 w-full max-w-sm"
          placeholder="–Æ—Ä—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç"
        /><br />
        <input
          type="text"
          className="border p-2 mb-4 w-full max-w-sm"
          placeholder="–•–æ–±–±–∏"
        /><br />
        <button
          className="bg-yellow-300 hover:bg-yellow-400 p-2 rounded"
          onClick={() => username.trim() && setStep("vacancy")}
        >
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ
        </button>
      </div>
    );
  }

  // 4. –í–∞–∫–∞–Ω—Å–∏—è
  if (step === "vacancy") {
    return (
      <div className="p-6 text-center">
        <h2 className="text-xl mb-2">Jurassic Jobs</h2>
        <img src="https://placehold.co/600x300?text=–í–∞–∫–∞–Ω—Å–∏—è+%22–°—Ç–∞–∂—ë—Ä%22" alt="vacancy" className="mx-auto mb-4" />
        <p>–°—Ç–∞–∂—ë—Ä –æ—Ç–¥–µ–ª–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –±–∏–∑–Ω–µ—Å–∞. –ó–∞—Ä–ø–ª–∞—Ç–∞: –µ–¥–∞ –∏ –æ–ø—ã—Ç.</p>
        <button className="bg-yellow-300 hover:bg-yellow-400 p-2 rounded" onClick={() => setStep("letter")}>
          –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
        </button>
      </div>
    );
  }

  // 5. –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ
  if (step === "letter") {
    return (
      <div className="p-6 text-center">
        <img src="https://placehold.co/600x300?text=–ü–∏—Å—å–º–æ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ" alt="letter" className="mx-auto mb-4" />
        <p>–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {username || "–ö–∏—Ä–∏–ª–ª"}, –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ Jurassic Corp.</p>
        <button className="bg-yellow-300 hover:bg-yellow-400 p-2 rounded" onClick={() => setStep("intro")}>
          –ü—Ä–∏–π—Ç–∏ –≤ –æ—Ñ–∏—Å
        </button>
      </div>
    );
  }

  // –î–∞–ª–µ–µ ‚Äî —Ç–≤–æ–∏ —É–∂–µ –≥–æ—Ç–æ–≤—ã–µ —ç–∫—Ä–∞–Ω—ã:
  // - "intro" ‚Üí –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
  // - "name" ‚Üí –≤–≤–æ–¥ –∏–º–µ–Ω–∏ (–ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å)
  // - "quiz" ‚Üí –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
  // - "end" ‚Üí —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω

  // üëá –∑–¥–µ—Å—å –∏–¥—É—Ç –¢–í–û–ò –ö–û–î-–ë–õ–û–ö–ò –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
  if (step === "intro") {
    return (
      <div className="p-6 text-center">
        <h1 className="text-3xl font-bold mb-4">Jurassic Corp: –¢–∞–±–ª–∏—á–Ω—ã–µ –¥–∂—É–Ω–≥–ª–∏</h1>
        <img src="https://placehold.co/600x200?text=–ó–∞—Å—Ç–∞–≤–∫–∞+–ö–∏—Ä–∏–ª–ª–∞" alt="–ö–∏—Ä–∏–ª–ª –∑–∞—Å—Ç–∞–≤–∫–∞" className="mx-auto mb-4" />
        <p className="mb-2">–ü—Ä–∏–≤–µ—Ç! –¢—ã –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏ –≤ –∫—Ä—É–ø–Ω–µ–π—à—É—é –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—é –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –∫–æ—Ä–º–∞ –¥–ª—è –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤.</p>
        <p className="mb-4">–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –¥–∞–≤–∞–π –Ω–µ–º–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–∏–º –∞–Ω—Ç—É—Ä–∞–∂.</p>
        <button
          className="bg-yellow-300 hover:bg-yellow-400 p-2 rounded m-2"
          onClick={() => {
            setMood("good");
            setStep("name");
          }}
        >
          –ê—Ä–∏—Å—Ç–∞—Ä—Ö —Å–µ–≥–æ–¥–Ω—è –≤ —Ö–æ—Ä–æ—à–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏
        </button>
        <button
          className="bg-yellow-300 hover:bg-yellow-400 p-2 rounded m-2"
          onClick={() => {
            setMood("bad");
            setStep("name");
          }}
        >
          –ê—Ä–∏—Å—Ç–∞—Ä—Ö —è–≤–Ω–æ –Ω–µ –≤—ã—Å–ø–∞–ª—Å—è
        </button>
      </div>
    );
  }

  if (step === "name") {
    return (
      <div className="p-6 text-center">
        <h2 className="text-xl mb-4">–ö–∞–∫ –∑–æ–≤—É—Ç —Ç–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?</h2>
        <input
          type="text"
          className="border p-2 mb-4 w-full max-w-sm"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
          onChange={(e) => setUsername(e.target.value)}
        />
        <br />
        <button
          className="bg-yellow-300 hover:bg-yellow-400 p-2 rounded"
          onClick={() => {
            if (username.trim()) setStep("quiz");
          }}
        >
          –ù–∞—á–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ
        </button>
      </div>
    );
  }

  if (step === "quiz") {
    const q = questions[questionIndex];
    return (
      <div className="p-6 max-w-xl mx-auto">
        <div className="text-sm text-gray-600 mb-2">–ê—Ä–∏—Å—Ç–∞—Ä—Ö ({mood === "good" ? "—Å–ø–æ–∫–æ–µ–Ω" : "—É–≥—Ä—é–º"})</div>
        <h2 className="text-xl font-bold mb-2">–í–æ–ø—Ä–æ—Å {questionIndex + 1} –∏–∑ {questions.length}</h2>
        <p className="mb-4">{q.question}</p>
        <div className="space-y-2">
          {q.options.map((opt, i) => (
            <button
              key={i}
              onClick={() => handleAnswer(opt)}
              disabled={selected}
              className={`w-full p-2 rounded ${
                selected === opt
                  ? opt === q.correct
                    ? "bg-green-300"
                    : "bg-red-300"
                  : "bg-yellow-300 hover:bg-yellow-400"
              }`}
            >
              {opt}
            </button>
          ))}
        </div>
        {ariResponse && (
          <div className="mt-4 p-3 border-l-4 border-black bg-yellow-100 italic">
            <strong>–ê—Ä–∏—Å—Ç–∞—Ä—Ö:</strong> {ariResponse}
          </div>
        )}
      </div>
    );
  }

  if (step === "end") {
    return (
      <div className="p-6 text-center">
        <h1 className="text-2xl font-bold mb-2">–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ</h1>
        <img src="https://placehold.co/400x150?text=–§–∏–Ω–∞–ª—å–Ω—ã–π+—ç–∫—Ä–∞–Ω" alt="–§–∏–Ω–∞–ª" className="mx-auto mb-4" />
        <p className="mb-2">{username}, —Ç—ã –Ω–∞–±—Ä–∞–ª {score} –∏–∑ {questions.length} –±–∞–ª–ª–æ–≤.</p>
        <p>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ê—Ä–∏—Å—Ç–∞—Ä—Ö–∞: {mood === "good" ? "–≤ –ø–æ—Ä—è–¥–∫–µ" : "–≤ —è—Ä–æ—Å—Ç–∏"}</p>
        <p className="mt-4">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ñ–¥–∏—Ç–µ –∑–≤–æ–Ω–∫–∞ –∏–∑ –æ—Ç–¥–µ–ª–∞ –∫–∞–¥—Ä–æ–≤ ü¶ï</p>
      </div>
    );
  }

  return null;
};

export default App;
